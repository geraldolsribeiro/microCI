---
steps:
  - name: "Gerar relatório de verificação do código C++ clang-tidy"
    description: "Verifica o código C++ e gera relatório em formato HTML"
    network: bridge
    plugin:
      name: "clang-tidy"
      options:
        - "-std=c++17"
      include:
        - "/usr/include/"
      source:
        - "src/*pp"
        - "include/*pp"

  - name: "Gerar relatório de verificação do código C++ cppcheck"
    plugin:
      name: "cppcheck"
      include:
        - "include"
      source:
        - "src"
        - "test"
      platform: "unix64"
      std: "c++17"

  - name: "Construir documentação em formato HTML"
    description: "Documentação do projeto"
    plugin:
      name: "mkdocs_material"
      action: "build"

  - name: "Servidor local na porta 8000 (Ctrl+C para finalizar)"
    description: "Executa servidor local para preview da documentação"
    only: "serve"
    plugin:
      name: "mkdocs_material"
      action: "serve"

  - name: "Configurar github pages"
    description: "Configura domínio Apex para github pages, arquivo README e ajusta usuário"
    plugin:
      name: bash
      bash: |
        cp github-pages/CNAME site/
        cat docs/index.md > README.md
        # Apenas para disponibilizar uma página de rosto para o github
        cp README.md site/
        chown $(id -u).$(id -g) -Rv site/

  - name: "Publicar documentação em microci.dev"
    network: bridge
    # only: "publish"
    ssh:
    plugin:
      name: "git_publish"
      git_url: "git@github.com:geraldolsribeiro/microci.dev.git"

  - name: "Formatar código C++ com clang-format"
    description: "Padroniza formato do código usando regras"
    plugin:
      name: "clang-format"
      source: # Lista arquivos a serem formatados
        - "src/*.cpp"
        - "test/*.cpp"
        - "include/*.hpp"

  - name: "Baixar arquivos externos ao projeto"
    description: "Download de dependências utilizadas na compilação"
    plugin:
      name: "fetch"
      target: include
      items:
        - url: https://raw.githubusercontent.com/adishavit/argh/master/argh.h
        - url: https://raw.githubusercontent.com/pantor/inja/master/single_include/inja/inja.hpp
        - url: https://raw.githubusercontent.com/nlohmann/json/develop/single_include/nlohmann/json.hpp
          target: include/nlohmann
        - url: https://raw.githubusercontent.com/Chocobo1/Hash/master/src/sha2_256.h

  - name: "Compilar versão estática do microCI"
    docker: "gcc:11"
    run_as: root
    network: bridge
    plugin:
      name: bash
      bash: |
        apt update
        apt upgrade -y
        apt install -y xxd libspdlog-dev libyaml-cpp-dev
        make -C src clean all
        make -C test
        chown $(id -u).$(id -g) -Rv bin/microCI
        chown $(id -u).$(id -g) -Rv test/

# vim: spell spelllang=pt,en
